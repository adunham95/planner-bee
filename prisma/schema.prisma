// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id
  email         String    @unique
  password_hash String
  sessions      Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model ECardTemplate {
  id          String           @id @default(uuid())
  sku         String           @unique
  name        String
  description String
  cost        Int
  components  ECardComponent[]
  cartIems    CartItem[]

  @@index([sku])
}

model ECardComponent {
  id               String        @id @default(uuid())
  ecardComponentID String
  ecardID          String
  ecard            ECardTemplate @relation(references: [id], fields: [ecardID])
  label            String?       @default("")
  editaable        Boolean?      @default(false)
  default          String?       @default("")
}

model Cart {
  id        String     @id @default(uuid())
  cartItems CartItem[]
}

model CartItem {
  id       String           @id @default(uuid())
  cartID   String
  cart     Cart             @relation(references: [id], fields: [cartID], onDelete: Cascade)
  ecardSku String
  eCard    ECardTemplate    @relation(references: [sku], fields: [ecardSku])
  options  CartItemOption[]
}

model CartItemOption {
  id               String   @id @default(uuid())
  cartItemID       String
  cartItem         CartItem @relation(references: [id], fields: [cartItemID])
  value            String
  ecardComponentID String
}
