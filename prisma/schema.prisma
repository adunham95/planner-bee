// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator typescriptInterfaces {
  provider = "prisma-generator-typescript-interfaces"
  output   = "../src/models/interfaces.d.ts"
  prettier = true
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id
  email         String    @unique
  password_hash String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  firstName     String?
  lastName      String?
  sessions      Session[]
  orders        Order[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model EventTheme {
  id           String              @id @default(uuid())
  name         String
  description  String
  imageURL     String
  sku          String              @unique
  cost         Int?
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @default(now()) @updatedAt
  options      EventThemeOptions[]
  orderProduct OrderProduct[]
}

model EventThemeOptions {
  id           String     @id @default(uuid())
  label        String?    @default("")
  editable     Boolean?   @default(false)
  default      String?    @default("")
  options      String?    @default("")
  customStyles String?    @default("")
  displayOrder Int        @default(0)
  componentID  String
  eventThemeID String
  eventTheme   EventTheme @relation(fields: [eventThemeID], references: [id])
}

model ECardTemplate {
  id            String           @id @default(uuid())
  sku           String           @unique
  name          String
  description   String
  cost          Int
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @default(now()) @updatedAt
  components    ECardComponent[]
  order         Order[]
  imageURL      String?
  orderProducts OrderProduct[]

  @@index([sku])
}

model ECardComponent {
  id               String        @id @default(uuid())
  ecardComponentID String
  ecardID          String
  ecard            ECardTemplate @relation(references: [id], fields: [ecardID])
  label            String?       @default("")
  editable         Boolean?      @default(false)
  default          String?       @default("")
  customStyles     String?       @default("")
  options          String?       @default("")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now()) @updatedAt
}

model Order {
  id           String              @id @default(uuid())
  orderNumber  String?             @default("")
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  ecardSku     String?
  eCard        ECardTemplate?      @relation(references: [sku], fields: [ecardSku])
  senderName   String?             @default("")
  senderEmail  String?             @default("")
  senderID     String?
  sender       User?               @relation(references: [id], fields: [senderID])
  eCardOptions EcardOrderOptions[]
  recipients   Recipient[]
  status       String?             @default("draft")
  products     OrderProduct[]
}

model OrderProduct {
  id            String               @id @default(uuid())
  ecardSku      String?
  eventThemeSku String?
  addOnSku      String?
  ecard         ECardTemplate?       @relation(references: [sku], fields: [ecardSku], map: "OrderProduct_ecard")
  eventTheme    EventTheme?          @relation(references: [sku], fields: [eventThemeSku], map: "OrderProduct_eventTheme")
  orderID       String
  order         Order                @relation(references: [id], fields: [orderID])
  options       OrderProductOption[]
}

model OrderProductOption {
  id             String       @id @default(uuid())
  orderProductID String
  orderProduct   OrderProduct @relation(references: [id], fields: [orderProductID], onDelete: Cascade)
  value          String
  key            String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model EcardOrderOptions {
  id               String   @id @default(uuid())
  orderID          String
  order            Order    @relation(references: [id], fields: [orderID])
  value            String
  ecardComponentID String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Recipient {
  id         String  @id @default(uuid())
  firstName  String
  lastName   String?
  email      String?
  phone      String?
  orderID    String
  order      Order   @relation(references: [id], fields: [orderID])
  rsvpStatus String?
}

model NewsletterSignUp {
  id        String   @id @default(uuid())
  email     String?
  createdAt DateTime @default(now())
}
