// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id
  email         String    @unique
  password_hash String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  firstName     String?
  lastName      String?
  sessions      Session[]
  orders        Order[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model ECardTemplate {
  id          String           @id @default(uuid())
  sku         String           @unique
  name        String
  description String
  cost        Int
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now()) @updatedAt
  components  ECardComponent[]
  order       Order[]
  imageURL    String?

  @@index([sku])
}

model ECardComponent {
  id               String        @id @default(uuid())
  ecardComponentID String
  ecardID          String
  ecard            ECardTemplate @relation(references: [id], fields: [ecardID])
  label            String?       @default("")
  editable         Boolean?      @default(false)
  default          String?       @default("")
  customStyles     String?       @default("")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now()) @updatedAt
}

model Order {
  id                 String              @id @default(uuid())
  orderNumber        String?             @default("")
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  ecardSku           String
  eCard              ECardTemplate       @relation(references: [sku], fields: [ecardSku])
  senderName         String?             @default("")
  senderEmail        String?             @default("")
  senderID           String?
  sender             User?               @relation(references: [id], fields: [senderID])
  eCardOptions       EcardOrderOptions[]
  recipeintFirstName String?             @default("")
  recipeintLastName  String?             @default("")
  recipeintEmail     String?             @default("")
  status             String?             @default("draft")
}

model EcardOrderOptions {
  id               String   @id @default(uuid())
  orderID          String
  order            Order    @relation(references: [id], fields: [orderID])
  value            String
  ecardComponentID String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
